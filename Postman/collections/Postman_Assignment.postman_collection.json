{
	"info": {
		"_postman_id": "a3fa1ecc-8649-4bfe-ab64-4bbb25db06a9",
		"name": "Postman_Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var random = Math.random().toString(36).substring(2);",
							"var emailId = random+\"@gmail.com\";",
							"pm.environment.set(\"emailId\", emailId);",
							"",
							"var n1= \"Himanshu\";",
							"pm.environment.set(\"ename\", n1);",
							"",
							"const gender= \"Male\";",
							"pm.environment.set(\"egender\",gender);",
							"",
							"const status= \"Active\";",
							"pm.environment.set(\"estatus\",status);",
							"",
							"",
							"console.log(\"This is the pre-script of POST method\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);",
							"});",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"Created\");",
							"});",
							"",
							"pm.test(\"Body matches string\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"Himanshu\");",
							"});",
							"",
							"pm.test(\"Verify emailId value\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.email).to.eql(pm.variables.get(\"emailId\"));",
							"});",
							"",
							"pm.test(\"Set an Id to enviornment variable\", function () {",
							"    var jsonData = pm.response.json();",
							"    var user_Id = jsonData.id;",
							"    pm.environment.set(\"userId\", user_Id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{ename}}\",\n    \"email\": \"{{emailId}}\",\n    \"gender\": \"{{egender}}\",\n    \"status\": \"{{estatus}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Url}}",
					"host": [
						"{{Url}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a used by userId",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"This is the pre-script of GET method\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name has string\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"pm.test(\"Response time is less than 500ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(500);",
							"});",
							"",
							"pm.test(\"Verify user name from the response\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql('Himanshu');",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Url}}/{{userId}}",
					"host": [
						"{{Url}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update a user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var n1= \"Himanshuknoldus\";",
							"pm.environment.set(\"ename\", n1);",
							"console.log(\"This is the pre-script of PUT method\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Himanshuknoldus\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"{{ename}}\",\n    \"email\": \"{{emailId}}\",\n    \"gender\": \"{{egender}}\",\n    \"status\": \"{{estatus}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Url}}/{{userId}}",
					"host": [
						"{{Url}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete a user",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"console.log(\"This is the pre-script of DELETE method\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Connection is present\", function () {",
							"    pm.response.to.have.header('Connection', 'keep-alive');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"value": "Bearer {{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Url}}/{{userId}}",
					"host": [
						"{{Url}}"
					],
					"path": [
						"{{userId}}"
					]
				}
			},
			"response": []
		}
	]
}